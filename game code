import pygame
import random
import os
from os import path

img_dir = path.join(path.dirname(__file__), 'img')
snd_dir = path.join(path.dirname(__file__), 'snd')

WIDTH = 700
HEIGHT = 400
FPS = 60

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

pygame.init()
pygame.mixer.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Rhythm")

clock = pygame.time.Clock()
spawns = (100, 150, 250, 300)

bkgr_image = pygame.image.load(os.path.join(img_dir, "background.jpg")).convert()
background = pygame.transform.scale(bkgr_image, (WIDTH, HEIGHT))
background_rect = background.get_rect()

font_name = pygame.font.match_font('arial')
def draw_text(surf, text, size, x, y):
    font = pygame.font.Font(font_name, size)
    text_surface = font.render(text, True, BLACK)
    text_rect = text_surface.get_rect()
    text_rect.midtop = (x, y)
    surf.blit(text_surface, text_rect)

def newmob():
    m = Mob()
    all_sprites.add(m)
    mobs.add(m)

def draw_shield_bar(surf, x, y, pct):
    if pct < 0:
        pct = 0
    BAR_LENGTH = 100
    BAR_HEIGHT = 10
    fill = (pct / 100) * BAR_LENGTH
    outline_rect = pygame.Rect(x, y, BAR_LENGTH, BAR_HEIGHT)
    fill_rect = pygame.Rect(x, y, fill, BAR_HEIGHT)
    pygame.draw.rect(surf, GREEN, fill_rect)
    pygame.draw.rect(surf, WHITE, outline_rect, 2)

def show_start_screen():

    screen.fill(WHITE)
    draw_text(screen, "Rhythm!", 64, WIDTH / 2, HEIGHT / 4)
    draw_text(screen, "Press the matching arrow key when the arrows hit the line", 22, WIDTH / 2, HEIGHT / 2)
    draw_text(screen, "Press a key to begin...", 18, WIDTH / 2, HEIGHT * 3 / 4)
    pygame.display.flip()

    waiting = True
    while waiting:
        clock.tick(FPS)

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
            if event.type == pygame.KEYUP:
                print("Key pressed to start game!")
                waiting = False

class Player(pygame.sprite.Sprite):
    def __init__(self):
       pygame.sprite.Sprite.__init__(self)
       self.image = pygame.Surface((5, 400))
       self.image.fill(BLACK)
       self.shield = 100
       self.rect = self.image.get_rect()
       self.rect.center = (WIDTH / 5, HEIGHT / 2)

class notehits(pygame.sprite.Sprite):
    def __init__(self, x, y):
        pygame.sprite.Sprite.__init__(self)

        self.rect = self.image.get_rect()
        self.rect.bottom = y
        self.rect.centerx = x

    def update(self):
        self.rect.y += self.speedy
        # kill if it moves off the top of the screen
        if self.rect.bottom < 0:
            self.kill()



class Mob(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image_orig = random.choice(notes_images)
        self.image_orig.set_colorkey(BLACK)
        self.image = self.image_orig.copy()
        self.image = pygame.transform.scale(self.image, (115, 115))
        self.rect = self.image.get_rect()
        self.rect.y = random.choice(spawns)
        self.rect.x = WIDTH
        self.speedx = random.randrange(-8, -1)
            
    def update(self):
        self.rect.x += self.speedx
        if self.rect.left < -25:
            self.rect.x = WIDTH
            self.rect.y = random.choice(spawns)
            self.speedx = random.randrange(-8, -1)
            player.shield -= 25

class HealthBar(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)

        self.healthbar_count = 0

        self.rect = self.image.get_rect()
        self.rect.x = 10
        self.rect.y = 10
        
    def setHealth(self, health):
        if health == 1:
            self.healthbar_count += 1
            if self.healthbar_count < 0:
                self.healthbar_count = 0
        elif health == -1:
            self.healthbar_count -= 1
            if self.healthbar_count > 5:
                self.healthbar_count = 5

notes_images = []
notes_list = ['note_1.png','note_2.png','note_3.png','note_4.png']

for img in notes_list:
    notes_images.append(pygame.image.load(os.path.join(img_dir, img)).convert())

all_sprites = pygame.sprite.Group()
mobs = pygame.sprite.Group()
player = Player()
all_sprites.add(player)
for i in range(1):
    newmob()
    
score = 0

start = True
running = True
while running:

    if start:
        show_start_screen()
        start = False

    clock.tick(FPS)

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            
    hits = pygame.sprite.groupcollide(mobs, notehits, True, True)
    for hit in hits:
        score += 100

    all_sprites.update()
    screen.blit(background, background_rect)
    all_sprites.draw(screen)

    draw_shield_bar(screen, 5, 5, player.shield)
    pygame.display.flip()

pygame.quit()
